/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'angel' at '7/9/15 3:26 PM' with Gradle 2.4
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.4/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.jopendocument:jOpenDocument:1.3'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'org.eclipse.persistence:javax.persistence:2.1.0'
	compile 'org.eclipse.persistence:org.eclipse.persistence.jpa:2.6.1-RC1'
    compile 'mysql:mysql-connector-java:5.1.36'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:tes	tng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

/**
MANAGE COMMAND LINE ARGUMENTS
*/
task persistence01(type:JavaExec) {
   main = 'com.molavec.file.FileParserShowCase'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}

task persistence02(type:JavaExec) {
   main = 'com.molavec.serialization.ObjectPersisterShowCase'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}

task persistence03(type:JavaExec) {
   main = 'com.molavec.jopendocument.ODSShowCase'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}

task persistence04(type:JavaExec) {
   main = 'com.molavec.properties.PropertiesLoader'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}

task persistence05(type:JavaExec) {
   main = 'com.molavec.properties.PropertiesWriter'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}
task persistence06(type:JavaExec) {
   main = 'com.molavec.json.ToJsonShowCase'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}
task persistence07(type:JavaExec) {
   main = 'com.molavec.json.FromJsonShowCase'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}

task persistence08(type:JavaExec) {
   main = 'com.molavec.jpa.simple.EmployeeServiceTest'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}



//Shows dependencies
task showMeCache << {
  configurations.compile.each { println it }
}
