/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'angel' at '7/9/15 3:26 PM' with Gradle 2.4
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.4/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.apache.commons:commons-math3:3.0'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:tes	tng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

/**
MANAGE COMMAND LINE ARGUMENTS
*/
task dp01(type:JavaExec) {
   main = 'com.tutorialspoint.designpattern.factory.FactoryPatternDemo'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}
task dp02(type:JavaExec) {
   main = 'com.tutorialspoint.designpattern.abstractfactory.AbstractFactoryPatternDemo'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}
task dp03(type:JavaExec) {
  main = 'com.tutorialspoint.designpattern.singleton.SingletonPatternDemo'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}
task dp04(type:JavaExec) {
   main = 'com.tutorialspoint.designpattern.builder.BuilderPatternDemo'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}
task dp05(type:JavaExec) {
  main = 'com.tutorialspoint.designpattern.prototype.PrototypePatternDemo'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}
task dp06(type:JavaExec) {
   main = 'com.tutorialspoint.designpattern.adapter.AdapterPatternDemo'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}
task dp07(type:JavaExec) {
   main = 'com.tutorialspoint.designpattern.dao.DaoPatternDemo'
   args = []
   classpath = sourceSets.main.runtimeClasspath
}

//Shows dependencies
task showMeCache << {
  configurations.compile.each { println it }
}
